version: '3'

services:
  plaintext-test-redis:
    image: redis
    container_name: plaintext-test-redis
    networks:
      - plaintext-test
    logging:
      driver: none
    # ports:
    #   - "6379:6379"
  # plaintext-test-localstack:
  #   image: atlassianlabs/localstack
  #   container_name: plaintext-test-localstack
  #   networks:
  #     - plaintext-test
  #   ports:
  #     - "4572:4572"
  #     - "4568:4568"
  #   environment:
  #     USE_SSL: 'true'
  #     DEBUG: 'true'
  plaintext-dind:
    image: docker:18-dind
    container_name: plaintext-dind
    networks:
      - plaintext-test
    logging:
      driver: none
    # resources:
    #   requests:
    #     memory: "50Mi"
    #     cpu: "250m"
    #   limits:
    #     memory: "100Mi"
    #     cpu: "300m"
    privileged: true
    volumes:
    # - docker:/var/lib/docker
    # - docker-run:/var/run
    - pdfs:/pdfs

  plaintext-worker:
    build:
      context: .
      dockerfile: Dockerfile-worker
    environment:
      REDIS_ENDPOINT: "plaintext-test-redis:6379"
      AWS_ACCESS_KEY_ID: "foo"
      AWS_SECRET_ACCESS_KEY: "bar"
      # KINESIS_VERIFY: ""
      # KINESIS_ENDPOINT: "plaintext-test-redis:4568"
      LOGLEVEL: 10
      CANONICAL_ENDPOINT: "http://mock-arxiv:8000"
      CANONICAL_VERIFY: 0
      COMPILER_ENDPOINT: "http://mock-arxiv:8000/compiler"
      COMPILER_VERIFY: 0
      DOCKER_HOST: "tcp://plaintext-dind:2375"

      VAULT_ENABLED: "1"
      NAMESPACE: "production"
      KUBE_TOKEN: "fookubetoken"
      VAULT_HOST: "mock-vault"
      VAULT_PORT: "8200"
      VAULT_ROLE: "plaintext"
      VAULT_CREDENTIAL: "foocredential"
      VAULT_SCHEME: "http"

      WAIT_FOR_SERVICES: 1
      WAIT_ON_STARTUP: 5

    networks:
      - plaintext-test
    volumes:
      # - docker:/var/lib/docker
      # - docker-run:/var/run
      - pdfs:/pdfs
      - data:/data
    depends_on:
      - plaintext-test-redis
      - plaintext-api
  plaintext-api:
    image: arxiv/plaintext-api
    build:
      context: .
      dockerfile: Dockerfile-api
    container_name: plaintext-api
    environment:
      REDIS_ENDPOINT: "plaintext-test-redis:6379"
      AWS_ACCESS_KEY_ID: "foo"
      AWS_SECRET_ACCESS_KEY: "bar"
      # KINESIS_VERIFY: ""
      # KINESIS_ENDPOINT: "plaintext-test-redis:4568"
      LOGLEVEL: 10
      JWT_SECRET: foosecret
      CANONICAL_ENDPOINT: "http://mock-arxiv:8000"
      CANONICAL_VERIFY: 0
      COMPILER_ENDPOINT: "http://mock-arxiv:8000/compiler"
      COMPILER_VERIFY: 0
      VAULT_ENABLED: "1"
      NAMESPACE: "production"
      KUBE_TOKEN: "fookubetoken"
      VAULT_HOST: "mock-vault"
      VAULT_PORT: "8200"
      VAULT_ROLE: "plaintext"
      VAULT_CREDENTIAL: "foocredential"
      VAULT_SCHEME: "http"

      WAIT_FOR_SERVICES: 1
      WAIT_ON_STARTUP: 5

    volumes:
      - data:/data
    ports:
      - "8000:8000"
    networks:
      - plaintext-test
    depends_on:
      - plaintext-test-redis

  mock-arxiv:
    image: arxiv/mock-arxiv
    build:
      context: .
      dockerfile: Dockerfile-mock
    container_name: mock-arxiv
    environment:
      JWT_SECRET: foosecret
    networks:
      - plaintext-test

  mock-vault:
    image: arxiv/mock-vault
    build:
      context: .
      dockerfile: Dockerfile-mock-vault
    container_name: mock-vault
    environment:
      JWT_SECRET: foosecret
    networks:
      - plaintext-test
  # plaintext-agent:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile-agent
  #   environment:
  #     AWS_ACCESS_KEY_ID: "foo"
  #     AWS_SECRET_ACCESS_KEY: "bar"
  #     CLOUDWATCH_ENDPOINT: "https://test-localstack:4582"
  #     DYNAMODB_ENDPOINT: "https://test-localstack:4569"
  #     KINESIS_ENDPOINT: "https://test-localstack:4568"
  #     KINESIS_VERIFY: ""
  #     DYNAMODB_VERIFY: ""
  #     CLOUDWATCH_VERIFY: ""
  #     EXTRACTION_ENDPOINT: "http://api:8000"
  #     LOGLEVEL: 10
  #     LOGFILE: "/var/log/plaintext-agent-processor.log"
  #     MODE: "test"
  #     JAVA_FLAGS: "-Dcom.amazonaws.sdk.disableCertChecking"
  #     AWS_CBOR_DISABLE: "true"
  #     INSTANCE_CREDENTIALS: ""
  #   networks:
  #     - plaintext-test
  #   depends_on:
  #     - plaintext-test-localstack
  #     - plaintext-worker
  #     - plaintext-api

networks:
  plaintext-test:

volumes:
  pdfs:
  data:
  docker:
  docker-run:
