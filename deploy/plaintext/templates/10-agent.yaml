# apiVersion: apps/v1beta1
# kind: Deployment
# metadata:
#   name: plaintext-agent
#   namespace: "{{ .Values.namespace }}"
#   labels:
#     subsystem: "{{ .Values.labels.subsystem }}"
#     container: plaintext-agent
#     service-group: backend
#     log-style: python
# spec:
#   replicas: 1
#   template:
#     metadata:
#       labels:
#         subsystem: "{{ .Values.labels.subsystem }}"
#         container: plaintext-agent
#         service-group: backend
#         log-style: python
#     spec:
#       serviceAccount: plaintext
#       volumes:
#       - name: vault-token
#         emptyDir: {}
#       - name: vault-certificate
#         secret:
#           secretName: vault-certificate
#       - name: "{{ .Values.name }}-data"
#         persistentVolumeClaim:
#           claimName: "{{ .Values.name }}"
#
#       containers:
#       - name: plaintext-agent
#         image: arxiv/plaintext-agent:{{ default "latest" .Values.agent.image.tag }}
#         imagePullPolicy: "{{ default "Always" .Values.imagePullPolicy }}"
#         env:
#         - name: LOGLEVEL
#           value: "{{ .Values.agent.log_level }}"
#         - name: LOGFILE
#           value: "{{ .Values.agent.log_file }}"
#         - name: REDIS_ENDPOINT
#           value: "{{ .Values.redis.host }}:6379"
#         - name: VAULT_ENABLED
#           value: "1"
#         - name: VAULT_HOST
#           value: "{{ .Values.vault.host }}"
#         - name: VAULT_PORT
#           value: "{{ .Values.vault.port }}"
#         - name: VAULT_CERT
#           value: /etc/vault-certificate/vaulttls.cert.pem
#         - name: VAULT_ROLE
#           value: "{{ .Values.vault.role }}-{{ .Values.namespace }}"
#         - name: VAULT_CREDENTIAL
#           value: "{{ .Values.vault.credential }}"
#         - name: KUBE_TOKEN
#           value: /var/run/secrets/kubernetes.io/serviceaccount/token
#         - name: NAMESPACE
#           valueFrom:
#             fieldRef:
#               fieldPath: metadata.namespace
#
#         volumeMounts:
#           - name: vault-certificate
#             mountPath: /etc/vault-certificate
#             readOnly: true
#           - name: vault-token
#             mountPath: /etc/vault
#           - mountPath: /data
#             name: "{{ .Values.name }}-data"
#
#         resources:
#           limits:
#             cpu: 300m
#             memory: 256Mi
#           requests:
#             cpu: 100m
#             memory: 128Mi
